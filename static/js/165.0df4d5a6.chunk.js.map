{"version":3,"file":"static/js/165.0df4d5a6.chunk.js","mappings":"wLACA,GAAgB,qBAAuB,sCAAsC,UAAY,2BAA2B,WAAa,4BAA4B,iBAAmB,kCAAkC,YAAc,6BAA6B,OAAS,yBCAtQ,EAA0B,yB,SCO1B,EANgB,SAACA,GACb,OACI,gBAAKC,UAAWC,EAAhB,SAA4BF,EAAMG,WCH1C,EAAyB,2B,UCczB,EAXmB,SAACH,GAEhB,IAAII,EAAO,YAAcJ,EAAMK,GAE/B,OACI,gBAAKJ,UAAWC,EAAhB,UACI,SAAC,KAAD,CAASI,GAAIF,EAAb,SAAoBJ,EAAMO,U,iDC8ChCC,GAAsBC,EAAAA,EAAAA,GAAU,CAACC,KAAM,wBAAjBD,EAfL,SAACT,GAEpB,OACI,kBAAMW,SAAUX,EAAMY,aAAtB,WACI,0BACI,SAACC,EAAA,EAAD,CAAOC,YAAa,oGAAqBP,KAAM,iBACxCQ,UAAWC,EAAAA,GAAcC,aAAa,WAEjD,gBAAKhB,UAAWC,EAAAA,OAAhB,UACI,6BAAQ,gBAAKgB,IAAKC,cAQlC,EAhDgB,SAACnB,GAEb,IAAIoB,EAAQpB,EAAMqB,aAEdC,EAAkBF,EAAMG,YAAYC,KAAI,SAAAD,GAAW,OAAI,SAAC,EAAD,CACvDhB,KAAMgB,EAAYhB,KAA2BF,GAAIkB,EAAYlB,IAAhCkB,EAAYlB,OACzCoB,EAAmBL,EAAMM,aAAaF,KAAI,SAAAE,GAAY,OAAI,SAAC,EAAD,CAC1DvB,QAASuB,EAAavB,SAAcuB,EAAarB,OAChCe,EAAMO,eAM3B,OAAK3B,EAAM4B,QAGP,iBAAK3B,UAAWC,EAAAA,qBAAhB,WACI,gBAAKD,UAAWC,EAAAA,UAAhB,UACI,gBAAKD,UAAWC,EAAAA,aAAhB,SACKoB,OAGT,iBAAKrB,UAAWC,EAAAA,WAAhB,WACI,gBAAKD,UAAWC,EAAAA,iBAAhB,SAAqCuB,KACrC,SAACjB,EAAD,CAAqBG,SAfb,SAACkB,GACjB7B,EAAM8B,YAAYD,EAAOF,0BAGH,SAAC,KAAD,CAAUrB,GAAI,Y,mBCJ5C,GAAeyB,E,QAAAA,KACXC,EAAAA,EAAAA,KAdkB,SAACZ,GACnB,MAAO,CACHC,aAAcD,EAAMC,iBAGH,SAACY,GACtB,MAAO,CACHH,YAAa,SAACH,GACVM,GAASC,EAAAA,EAAAA,GAAmBP,SAOpCQ,EAAAA,EAFJ,CAGEC,I","sources":["webpack://react-kabzda-1/./src/components/Dialogs/Dialogs.module.css?1b2e","webpack://react-kabzda-1/./src/components/Dialogs/Message/Message.module.css?72d0","components/Dialogs/Message/Message.jsx","webpack://react-kabzda-1/./src/components/Dialogs/DialogItem/DialogItem.module.css?beb9","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"dialogsMainContainer\":\"Dialogs_dialogsMainContainer__VC9Ok\",\"leftPanel\":\"Dialogs_leftPanel__tTEYc\",\"rightPanel\":\"Dialogs_rightPanel__+0dh9\",\"MessagesElements\":\"Dialogs_MessagesElements__I5BoW\",\"typeMessage\":\"Dialogs_typeMessage__rKvpF\",\"button\":\"Dialogs_button__grQDt\"};","// extracted by mini-css-extract-plugin\nexport default {\"dialogs\":\"Message_dialogs__KC8yz\"};","import s from './Message.module.css'\r\n\r\nconst Message = (props) => {\r\n    return (\r\n        <div className={s.dialogs}>{props.message}</div>\r\n    )\r\n}\r\n\r\nexport default Message;","// extracted by mini-css-extract-plugin\nexport default {\"dialog\":\"DialogItem_dialog__6RHLg\"};","import React from \"react\";\r\nimport s from './DialogItem.module.css'\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst DialogItem = (props) => {\r\n\r\n    let path = \"/dialogs/\" + props.id;\r\n\r\n    return (\r\n        <div className={s.dialog}>\r\n            <NavLink to={path}>{props.name}</NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DialogItem;","import s from './Dialogs.module.css'\r\nimport Message from \"./Message/Message\";\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport React from \"react\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {InputDialogs} from \"../common/FormsControls/FormsControls\";\r\nimport sendButton from \"./../../assets/images/send.png\"\r\n\r\n\r\nconst Dialogs = (props) => {\r\n\r\n    let state = props.messagesPage;\r\n\r\n    let dialogsElements = state.dialogsData.map(dialogsData => <DialogItem\r\n        name={dialogsData.name} key={dialogsData.id} id={dialogsData.id}/>);\r\n    let messagesElements = state.messagesData.map(messagesData => <Message\r\n        message={messagesData.message} key={messagesData.id}/>);\r\n    let newMessageBody = state.newMessageBody;\r\n\r\n    let addNewMessage = (values) => {\r\n        props.sendMessage(values.newMessageBody);\r\n    }\r\n\r\n    if (!props.isAuth) return <Redirect to={\"/login\"} />\r\n\r\n    return (\r\n        <div className={s.dialogsMainContainer}>\r\n            <div className={s.leftPanel}>\r\n                <div className={s.dialogsItems}>\r\n                    {dialogsElements}\r\n                </div>\r\n            </div>\r\n            <div className={s.rightPanel}>\r\n                <div className={s.MessagesElements}>{messagesElements}</div>\r\n                <AddMessageFormRedux onSubmit={addNewMessage}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst AddMessageForm = (props) => {\r\n\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field placeholder={\"Введите сообщение\"} name={\"newMessageBody\"}\r\n                       component={InputDialogs} autocomplete=\"off\"/>\r\n            </div>\r\n            <div className={s.button}>\r\n                <button><img src={sendButton}/></button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst AddMessageFormRedux = reduxForm({form: 'dialogAddMessageForm'})(AddMessageForm)\r\n\r\nexport default Dialogs;","import React from \"react\";\r\nimport {sendMessageCreator} from \"../../Redux/dialogs-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        messagesPage: state.messagesPage\r\n    }\r\n}\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        sendMessage: (newMessageBody) => {\r\n            dispatch(sendMessageCreator(newMessageBody));\r\n        }\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect\r\n)(Dialogs);"],"names":["props","className","s","message","path","id","to","name","AddMessageFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","placeholder","component","InputDialogs","autocomplete","src","sendButton","state","messagesPage","dialogsElements","dialogsData","map","messagesElements","messagesData","newMessageBody","isAuth","values","sendMessage","compose","connect","dispatch","sendMessageCreator","withAuthRedirect","Dialogs"],"sourceRoot":""}