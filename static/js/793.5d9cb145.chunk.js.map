{"version":3,"file":"static/js/793.5d9cb145.chunk.js","mappings":"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","sources":["webpack://react-kabzda-1/./src/components/Profile/Profile.module.css?b512","webpack://react-kabzda-1/./src/components/Profile/ProfileInfo/ProfileInfo.module.css?ead2","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","webpack://react-kabzda-1/./src/components/Profile/MyPosts/MyPosts.module.css?831b","webpack://react-kabzda-1/./src/components/Profile/MyPosts/Post/Post.module.css?87e6","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"Profile\":\"Profile_Profile__3dY1m\"};","// extracted by mini-css-extract-plugin\nexport default {\"mainContainer\":\"ProfileInfo_mainContainer__xgr-w\",\"avatarBlock\":\"ProfileInfo_avatarBlock__cu2VE\",\"avatar\":\"ProfileInfo_avatar__v93zJ\",\"describeBlock\":\"ProfileInfo_describeBlock__fepBX\",\"topBlock\":\"ProfileInfo_topBlock__e12eb\",\"status\":\"ProfileInfo_status__POj+p\",\"middleBlock\":\"ProfileInfo_middleBlock__XNXHp\",\"leftDescribe\":\"ProfileInfo_leftDescribe__ACO6q\",\"rightDescribe\":\"ProfileInfo_rightDescribe__wHgOU\",\"bottomBlock\":\"ProfileInfo_bottomBlock__I9vQo\",\"counter\":\"ProfileInfo_counter__aMvqg\",\"textActivities\":\"ProfileInfo_textActivities__8ngGJ\",\"buttonContainer\":\"ProfileInfo_buttonContainer__yedSE\",\"button\":\"ProfileInfo_button__MMu1O\"};","import React, {useEffect, useState} from \"react\";\r\nimport s from \"./ProfileInfo.module.css\"\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n    let [editMode, setEditMode] = useState(false)\r\n    let [status, setStatus] = useState(props.status)\r\n\r\n    useEffect( () => {\r\n        setStatus(props.status);\r\n    }, [props.status]);\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true);\r\n    }\r\n\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateStatus(status);\r\n    }\r\n\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value);\r\n    }\r\n\r\n        return (\r\n            <div>\r\n                { !editMode &&\r\n                <div className={s.status}>\r\n                    <span onClick={ activateEditMode }>{props.status || 'Добавить статус'}</span>\r\n                </div>\r\n                }\r\n                {editMode &&\r\n                <div>\r\n                    <input onChange={onStatusChange} autoFocus={true} onBlur={deactivateEditMode} value={status}/>\r\n                </div>\r\n                }\r\n            </div>\r\n        )\r\n}\r\n\r\nexport default ProfileStatusWithHooks;","import './ProfileInfo.module.css';\r\nimport s from './ProfileInfo.module.css'\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport React from \"react\";\r\nimport userPhoto from \"../../../assets/images/avatar1.png\";\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\n\r\nconst ProfileInfo = (props) => {\r\n\r\n    if (!props.profile) {\r\n        return <Preloader />\r\n    }\r\n\r\n    return (\r\n        <div className={s.mainContainer}>\r\n            <div className={s.avatarBlock}>\r\n                <div className={s.avatar}>\r\n                    <img src={props.profile.photos.large != null ? props.profile.photos.large : userPhoto}/>\r\n                </div>\r\n                <a className={s.buttonContainer} href=\"\">\r\n                    <span className={s.button}>Редактировать</span>\r\n                </a>\r\n            </div>\r\n            <div className={s.describeBlock}>\r\n                <div className={s.topBlock}>\r\n                    <h1>{props.profile.fullName}</h1>\r\n                    {/*<div className={s.status}>*/}\r\n                        <ProfileStatusWithHooks status={props.status} updateStatus={props.updateStatus}/>\r\n                </div>\r\n                <div className={s.middleBlock}>\r\n                    <div className={s.leftDescribe}>\r\n                        <h3>День рождения:</h3>\r\n                        <h3>Город:</h3>\r\n                        <h3>Место работы:</h3>\r\n                    </div>\r\n                    <div className={s.rightDescribe}>\r\n                        <a href=\"\">15 октября 1996 г.</a>\r\n                        <a href=\"\">Москва</a>\r\n                        <a href=\"\">{props.profile.lookingForAJobDescription}</a>\r\n                    </div>\r\n                </div>\r\n                <div className={s.bottomBlock}>\r\n                    <div>\r\n                        <div className={s.counter}>1089</div>\r\n                        <div className={s.textActivities}>подписчиков</div>\r\n                    </div>\r\n                    <div>\r\n                        <div className={s.counter}>379</div>\r\n                        <div className={s.textActivities}>друзей</div>\r\n                    </div>\r\n                    <div>\r\n                        <div className={s.counter}>1051</div>\r\n                        <div className={s.textActivities}>фотография</div>\r\n                    </div>\r\n                    <div>\r\n                        <div className={s.counter}>258</div>\r\n                        <div className={s.textActivities}>отметок</div>\r\n                    </div>\r\n                    <div>\r\n                        <div className={s.counter}>568</div>\r\n                        <div className={s.textActivities}>видеозаписей</div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileInfo;","// extracted by mini-css-extract-plugin\nexport default {\"postsMain\":\"MyPosts_postsMain__LKYww\",\"postsArea\":\"MyPosts_postsArea__nxNWG\",\"leftPosts\":\"MyPosts_leftPosts__48yPY\",\"textArea\":\"MyPosts_textArea__PHZk7\",\"itemName\":\"MyPosts_itemName__pjhsF\",\"posts\":\"MyPosts_posts__-CQ6+\"};","// extracted by mini-css-extract-plugin\nexport default {\"postMain\":\"Post_postMain__nKKCr\",\"image\":\"Post_image__W-MNv\",\"textPostOverall\":\"Post_textPostOverall__wt34K\",\"textSend\":\"Post_textSend__KhhtG\",\"likes\":\"Post_likes__Redov\"};","import s from './Post.module.css';\r\n\r\nconst Post = (props) => {\r\n    return (\r\n        <div className={s.postMain}>\r\n            <div className={s.image}>\r\n                <img src='http://pm1.narvii.com/6889/74979d4d2744ec6e27995b6e866f091d04c0b40cr1-515-414v2_uhq.jpg'/>\r\n            </div>\r\n            <div className={s.textPostOverall}>\r\n                <div className={s.textSend}>\r\n                    {props.message}\r\n                </div>\r\n                <div className={s.likes}>\r\n                    <span>Likes: </span> {props.likesCount}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Post;","import s from './MyPosts.module.css';\r\nimport Post from './Post/Post'\r\nimport React from \"react\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../../utilities/validators/validators\";\r\nimport {InputProfile} from \"../../common/FormsControls/FormsControls\";\r\n\r\nconst maxLength75 = maxLengthCreator(75);\r\n\r\nconst AddNewPostForm = (props) => {\r\n\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field placeholder={\"Что у вас нового?\"} name={\"newPostText\"} component={InputProfile}\r\n                validate={[required, maxLength75]} autocomplete=\"off\"/>\r\n            </div>\r\n            <div>\r\n                <button>Опубликовать</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nlet AddNewPostFormRedux = reduxForm({form: 'addPostForm'})(AddNewPostForm)\r\n\r\nconst MyPosts = (props) => {\r\n    let postsElements =\r\n        props.postsData.map( postsData => <Post message={postsData.message} likesCount={postsData.likesCount}/>);\r\n\r\n\r\n    let newPostElement = React.createRef();\r\n\r\n    let onAddPost = (values) => {\r\n        props.addPost(values.newPostText);\r\n    }\r\n\r\n    return (\r\n        <div className={s.postsMain}>\r\n            <div className={s.leftPosts}></div>\r\n            <div className={s.postsArea}>\r\n                <AddNewPostFormRedux onSubmit={onAddPost}/>\r\n                <div className={s.posts}>\r\n                    {postsElements}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default MyPosts;","import React from \"react\";\r\nimport {addPost} from \"../../../Redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        postsData: state.profilePage.postsData,\r\n        newPostText: state.profilePage.newPostText\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (newPostText) => {\r\n            dispatch(addPost(newPostText));\r\n        }\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;","import s from './Profile.module.css'\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\nimport React from \"react\";\r\n\r\n\r\n\r\nconst Profile = (props) => {\r\n    return (\r\n        <div className={s.Profile}>\r\n            <ProfileInfo profile={props.profile} status={props.status} updateStatus={props.updateStatus}/>\r\n            <MyPostsContainer />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile;\r\n","import Profile from \"./Profile\";\r\nimport React from \"react\";\r\nimport {getStatus, getUserProfile, updateStatus} from \"../../Redux/profile-reducer\";\r\nimport {connect} from \"react-redux\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.authorizedUserId;\r\n            if (!userId) {\r\n                this.props.history.push(\"/login\");\r\n            }\r\n        }\r\n        this.props.getUserProfile(userId);\r\n        this.props.getStatus(userId);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Profile {...this.props} profile={this.props.profile} status={this.props.status} updateStatus={this.props.updateStatus}/>\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authorizedUserId: state.auth.id,\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {getUserProfile, getStatus, updateStatus}),\r\n    withRouter,\r\n    //withAuthRedirect\r\n)(ProfileContainer);\r\n\r\n\r\n\r\n\r\n"],"names":["props","useState","editMode","setEditMode","status","setStatus","useEffect","className","s","onClick","onChange","e","currentTarget","value","autoFocus","onBlur","updateStatus","profile","src","photos","large","userPhoto","href","fullName","lookingForAJobDescription","Preloader","message","likesCount","maxLength75","maxLengthCreator","AddNewPostFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","placeholder","name","component","InputProfile","validate","required","autocomplete","postsElements","postsData","map","values","addPost","newPostText","connect","state","profilePage","dispatch","MyPosts","ProfileContainer","userId","this","match","params","authorizedUserId","history","push","getUserProfile","getStatus","React","compose","auth","id","isAuth","withRouter"],"sourceRoot":""}